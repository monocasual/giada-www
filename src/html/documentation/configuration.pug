extends ../base

block metas-vars
	- var title       = 'Docs - Configuration - '
	- var description = ', documentation, Configuration'
	- var keywords    = ', documentation, Configuration'

block content
	.container
		#documentation.row
			.col-md-9
				h1 Configuration
				p.
					This panel gives you the ability to tweak hardware parameters as well as operational modes, through four different tabs: #[strong Sound System], #[strong MIDI], #[strong Behaviors], #[strong Misc] and #[strong Plugins].
				
				h2 Sound System

				p.
					Configure your sound system, input/output channels and the buffer size.
				p
					img.first(src='images/docs/giada-configuration-panel.png' alt='Giada configuration panel - sound system tab' title='Giada configuration panel - sound system tab')
				ul
					li.
						#[strong System] — This is the audio framework to choose from. It may vary from OS to OS.
					li.
						#[strong Buffer size] — (in frames): a low value means low latency but high cpu work, while an high value means high latency with low cpu work  (useful if you have a slow machine or you don't need to play channels in live mode).
					li.
						#[strong Sample rate] — (in Hz): the sample rate at which your soundcard works. If you load a set of samples recorded at different sample rates, they will be converted to that rate (see #[em resampling] below).
					li.
						#[strong Output device] — The device used for playing. The question mark on the right pops up some information about it.
					li.
						#[strong Limit output] — If enabled, the output signal will be truncated if greater than &pm; 1.0 (floating point values).
					li.
						#[strong Input device] — The device used for recording. Disabled by default. The question mark on the right pops up some information about it.
					li.
						#[strong Resampling] — The algorithm used for resampling, i.e. when you load a sample whose sample rate differs from the system's rate and when you change the pitch of a sample channel. You can choose between five algorithms: 1) #[strong Linear] — very fast, low quality; 2) #[strong Zero Order Hold] — fast, low quality; 3) #[strong Sinc basic quality] — not so fast, medium quality; 4) #[strong Sinc medium quality] — not fast, good quality; 5) #[strong Sinc best quality] — slow, super quality.
				
				h2 MIDI

				p Configure here the global MIDI parameters.
				ul
					li
						strong System
						|  — This is the MIDI framework to choose from. It may vary from OS to OS;
					li
						strong Output port
						|  — The MIDI output connection;
					li
						strong Input port
						|  — The MIDI input connection;
					li
						strong Output midimap
						|  — midimap file in use. Please refer to 
						a(href='documentation-midi-output-management') MIDI output management
						|  for more information about the MIDI lightning feature;
					li
						strong Sync
						|  — How to sync with another device. Giada can act only as a 
						em master
						|  controller:
						ol
							li
								strong (disabled)
								|  — don't sync anything;
							li
								strong MIDI Clock
								|  — send 
								a(href='http://en.wikipedia.org/wiki/MIDI_beat_clock') MIDI clock events
								| , aka MIDI beat clock or MIDI clock;
							li
								strong MTC
								|  — send 
								a(href='http://en.wikipedia.org/wiki/MIDI_timecode') MIDI timecode events
								| . This is quite experimental: the rate is temporarily hardcoded to 25 frame/s (standard rate for PAL video).
				
				h2 Behaviors

				p Define how Giada should handle loops, timing and channels.
				ul
					li
						p.
							#[strong Dynamic channels stop immediately when the sequencer is halted] — What should happen when you pull up the performance (by pressing the #[span.code spacebar] or the stop button)? If the option is enabled, any sample in loop mode and any sample with recorded actions will stop abruptly; otherwise it will play until the end.
					li
						p.
							#[strong Treat one shot channels with actions as loops] — By default, clicking the #[img.inline(src='images/docs/read-recs-button.png' alt='Read actions button')] button (or pressing the #[span.code shift + (key)] combination) on a channel that is reading actions stops it immediately. When this option is enabled, any playing channel whose actions are suspended will be set to #[em ending mode] first, as a channel in loop mode would do, and then it will stop at the next first beat.
					li
						p.
							#[strong New samples channels have input monitor on by default] — If enabled, new sample channels will have the #[em Input protection] flag checked by default;
					li
						p.
							#[strong New samples channels have overdub protection on by default] — If enabled, new sample channels will have the #[em Overdub protection] flag checked by default. Useful when live recording audio. 
				
				h2 Misc

				p.
					This tab contains miscellaneous options.
	
				ul
					li
						p.
							#[strong Debug messages] — How Giada prints information on its internal state:
						
						ol
							li
								p.
									#[strong (disabled)] — don't print anything anywhere;
							li
								p.
									#[strong To standard output] — print messages on the command line, only if you run Giada from the terminal. This mode doesn't work on Windows;
							li
								p.
									#[strong To file] — save messages to #[span.code giada.log] file, located in the same place of the configuration file as described in the #[a(href='documentation-introduction') Introduction] chapter.
					
					li
						p.
							#[strong Tooltips] — Toggles little pop-up messages that appear when hovering the mouse over UI components. 
				
				h2 Plugins
				p
					img.first(src='images/docs/plugin-scanner.png' alt='Plugin scanner panel' title='Plugin scanner panel')
				p
					| This tab contains the plugin scanner. It's used to search for available audio plugins in your system. Insert the path to your plugin folder in the input field and press the 
					strong scan
					|  button. More than one path can be added, both manually or by clicking the "+" button (a directory browser will pop up). Paths are separated by the 
					span.code ;
					|  character.
				p
					| Once finished, the 
					strong scan
					|  button will report the number of available plugins found. You should do a complete scan every time you add/install a new plugin, to make it available for use.

			#side-menu.col-md-3.margin-top-xl
				include side-menu
